{"version":3,"file":"static/js/506.1915b9ba.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/profile/aboutProfile/description.module.css?ea8d","components/profile/aboutProfile/profileStatus.jsx","components/profile/aboutProfile/description.jsx","webpack://my-app/./src/components/profile/myPosts/post/post.module.css?a198","components/profile/myPosts/post/post.jsx","webpack://my-app/./src/components/profile/myPosts/newPost/newPost.module.css?0f85","components/profile/myPosts/newPost/newPost.jsx","components/profile/myPosts/myPosts.jsx","components/profile/myPosts/myPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"description_img__zGAVt\",\"description\":\"description_description__448J+\",\"ava\":\"description_ava__26ZWW\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n           status: e.currentTarget.value\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n        if(prevProps.status!==this.props.status)\r\n        this.setState({\r\n            status:this.props.status\r\n        })\r\n    }\r\n    render() {\r\n        return <div>\r\n            {!(this.state.editMode) ?\r\n                <div  onDoubleClick={this.activateEditMode}>{this.props.status||\"empty status\"}</div> :\r\n                <div><input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} /></div>}\r\n        </div>\r\n    }\r\n}\r\nexport default ProfileStatus","import React from \"react\";\r\nimport s from \"./description.module.css\"\r\nimport Preloader from \"../../common/preloader/preloader\"\r\nimport profilePoto from \"../../../neon-music-note-on-brick-wall-eps-10-vector-30103301.jpg\"\r\nimport landscape from \"../../../Landscape-Color.jpg\"\r\nimport ProfileStatus from \"./profileStatus\";\r\nconst Discription = (props) => {\r\n    if(!props.profile){\r\n        return<Preloader/>\r\n    }\r\n    return <div>\r\n        <div>\r\n        <img className={s.img} src={landscape} />\r\n    </div>\r\n    <img className={s.ava}src={(!props.profile.photos.large)?profilePoto:props.profile.photos.large}/>\r\n        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n    </div>\r\n}\r\nexport default Discription;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post_item__uUfB4\"};","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\nfunction Post(props) {\r\n  return <div className={s.item}>\r\n    <img src=\"https://i.pinimg.com/736x/40/6f/fc/406ffcbdf1c7e60d2a4f038e185f63a1.jpg\"/>\r\n    {props.content}\r\n    <button>{props.likes} like</button>\r\n  </div>\r\n}\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"newPost_container__aflD2\",\"button\":\"newPost_button__0H7qe\",\"head\":\"newPost_head__oF279\",\"textarea\":\"newPost_textarea__lMUKJ\"};","import React from \"react\";\r\nimport s from \"./newPost.module.css\"\r\nimport { Form, Field } from \"react-final-form\"\r\nconst NewPost = (props) => {\r\n    \r\n    const onSubmit = (e) => {\r\n        props.AddPost();\r\n        props.onTextChange(\"\")\r\n        e.NewPostText=\"\";\r\n    }\r\n    const validate = (e) => {\r\n        props.onTextChange(e.NewPostText)\r\n    }\r\n    return <div>\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            validate={validate}\r\n            render={({ handleSubmit }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className={s.container}>\r\n                    <div className={s.head}>New Post</div>\r\n                    <Field\r\n                        name=\"NewPostText\"\r\n                        render={({ input, meta }) => (\r\n                            <>\r\n                                <textarea type=\"text\" placeholder=\"Add New Post Text\" className={s.textarea} required {...input}/>\r\n                                {meta.touched && meta.error && <span>{meta.error}</span>}\r\n                            </>\r\n                        )}\r\n                    />\r\n                    <button type=\"submit\" className={s.button}>Add Post</button>\r\n                    </div>\r\n                </form>\r\n\r\n            )}\r\n        />\r\n\r\n\r\n    </div>\r\n}\r\nexport default NewPost;","import React from \"react\";\r\nimport Post from \"./post/post\";\r\nimport s from \"./myPosts.module.css\"\r\nimport NewPost from \"./newPost/newPost\";\r\nfunction MyPosts(props) {\r\n\r\n\r\n  let PostsElement = props.posts.map(p => <Post content={p.content} likes={p.likes} />);\r\n\r\n  return<div> \r\n    <NewPost AddPost={props.AddPost} onTextChange={props.onTextChange}/>\r\n    <div>\r\n      my posts:\r\n    </div>\r\n    {PostsElement}\r\n  </div>\r\n}\r\nexport default MyPosts;","import { add_PostActionCreator, update_Post_TextActionCreator } from \"../../../redux/profilePageReducer\";\r\nimport MyPosts from \"./myPosts\";\r\nimport { connect } from \"react-redux\";\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    AddPost: () => {\r\n      dispatch(add_PostActionCreator());\r\n    },\r\n    onTextChange: (text) => {\r\n      let action = update_Post_TextActionCreator(text);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport Description from \"./aboutProfile/description\";\r\nimport MyPostsContainer from \"./myPosts/myPostsContainer\";\r\n\r\n function Profile(props){ \r\n    return <div>\r\n        <Description profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n      </div>\r\n }\r\n export default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport { setUserProfile , getUserProfileTC,getUserStatusTC,updateUserStatusTC} from \"../../redux/profilePageReducer\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { withRedirect } from \"../../HOC/withNavigate\";\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children){\r\n  return(props)=>{\r\n     const match  = {params: useParams()};\r\n     return <Children {...props}  match = {match}/>\r\n }\r\n} \r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId=this.props.match.params.userId;\r\n    if(!userId){\r\n      userId=30456;\r\n    }\r\n   this.props.getUserProfileTC(userId);\r\n   this.props.getUserStatusTC(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateUserStatusTC}/>\r\n    )\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.userProfile,\r\n  isAuth: state.auth.isAuth,\r\n  status: state.profilePage.status,\r\n})\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { setUserProfile, getUserProfileTC,getUserStatusTC,updateUserStatusTC }),\r\n  withRouter,\r\n  withRedirect\r\n)(ProfileContainer);\r\n\r\n"],"names":["ProfileStatus","React","constructor","arguments","state","editMode","status","this","props","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","componentDidUpdate","prevProps","prevState","render","_jsx","children","onChange","autoFocus","onBlur","onDoubleClick","profile","_jsxs","className","s","src","landscape","photos","large","profilePoto","Preloader","content","likes","Form","onSubmit","AddPost","onTextChange","NewPostText","validate","_ref","handleSubmit","Field","name","_ref2","input","meta","_Fragment","type","placeholder","required","touched","error","PostsElement","posts","map","p","Post","NewPost","connect","profilePage","newPostText","dispatch","add_PostActionCreator","text","action","update_Post_TextActionCreator","MyPosts","Description","MyPostsContainer","withRouter","Children","match","params","useParams","ProfileContainer","componentDidMount","userId","getUserProfileTC","getUserStatusTC","Profile","updateUserStatusTC","compose","userProfile","isAuth","auth","setUserProfile","withRedirect"],"sourceRoot":""}